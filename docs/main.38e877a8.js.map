{"version":3,"sources":["js/color-change.js","js/main.js"],"names":["UPDATE_SPEED","hueMin","hueMax","hueRange","isActive","colorChange","el","document","querySelector","button","hue","randomBetween","timeout","setTimeout","update","range","createColors","h","s","l","setColor","classList","add","updateText","addEventListener","toggle","clearTimeout","primary","secondary","documentElement","style","setProperty","dataset","text","pause","play","min","max","Math","round","random"],"mappings":"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","file":"main.38e877a8.js","sourceRoot":"../src","sourcesContent":["const UPDATE_SPEED = 6000\n\nconst hueMin = 180\nconst hueMax = 340\nconst hueRange = hueMax - hueMin\nlet isActive = true\n\nexport default function colorChange() {\n  const el = document.querySelector('.colors')\n  const button = el.querySelector('button')\n  let hue = randomBetween(0, hueRange)\n  let timeout = setTimeout(update, UPDATE_SPEED)\n\n  setTimeout(() => el.classList.add('hint'), UPDATE_SPEED + 1000)\n\n  updateText(el)\n\n  button.addEventListener('click', () => {\n    isActive = !isActive\n    button.classList.toggle('pause', isActive)\n    button.classList.toggle('play', !isActive)\n    isActive ? update() : clearTimeout(timeout)\n    updateText(el)\n  })\n\n  function update() {\n    const range = { h: [160, 330], s: [20, 40], l: [30, 50] }\n    const [primary, secondary] = createColors(hue, range)\n\n    setColor(primary, secondary)\n    hue += randomBetween(30, 60)\n    timeout = setTimeout(update, UPDATE_SPEED)\n  }\n}\n\nfunction createColors(hue, range) {\n  const h = 180 + (hue % 160)\n  const s = randomBetween(...range.s)\n  const l = randomBetween(...range.l)\n\n  return [`hsl(${(h + 120) % 360}deg, ${s + 15}%, ${l + 20}%)`, `hsl(${h}deg, ${s}%, ${l}%)`]\n}\n\nfunction setColor(primary, secondary) {\n  document.documentElement.style.setProperty('--primary', primary)\n  document.documentElement.style.setProperty('--secondary', secondary)\n}\n\nfunction updateText(el) {\n  el.dataset.text = isActive ? el.dataset.pause : el.dataset.play\n}\n\nfunction randomBetween(min, max) {\n  return min + Math.round(Math.random() * (max - min))\n}\n","import colorChange from './color-change'\n\ncolorChange()\n"]}